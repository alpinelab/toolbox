swagger: "2.0"
info:
  description: API AlpineLab toolbox
  version: 0.1.0
  title: Toolbox
  contact:
    email: dev@alpine-lab.com
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:5000"
tags:
  - name: dependency
    description: Everything about Dependencies
  - name: comment
    description: Access to Dependencies Comments
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  "/dependencies/{id}":
    get:
      tags:
        - dependency
      summary: Find dependency by ID
      description: Returns a single dependency
      parameters:
        - name: id
          in: path
          description: ID of dependency to return
          required: true
          type: integer
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Dependency"
        "404":
          description: Dependency not found
  /dependencies:
    get:
      tags:
        - dependency
      summary: Find all dependencies
      description: Returns all dependencies
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Dependency"
    post:
      tags:
        - dependency
      summary: Add a new dependency to the toolbox
      parameters:
        - name: body
          in: body
          description: Payload
          required: true
          schema:
            type: object
            properties:
              name:
                $ref: "#/definitions/Dependency/properties/name"
      responses:
        "201":
          description: Successful operation
          schema:
            $ref: "#/definitions/Dependency"
        "422":
          description: Invalid input
      security:
        - APIKeyHeader: []
  "/comments/{id}":
    get:
      tags:
        - comment
      summary: Find comment by ID
      description: Returns a single comment
      parameters:
        - name: id
          in: path
          description: ID of comment to return
          required: true
          type: integer
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Comment"
        "404":
          description: Comment not found
  "/comments":
    get:
      tags:
        - comment
      summary: Find all comments
      description: Returns all comment
      responses:
        "200":
          description: Successful operation
          schema:
            type: array
            items:
              $ref: "#/definitions/Comment"
        "404":
          description: Comment not found
    post:
      tags:
        - comment
      summary: create a comment
      parameters:
        - name: body
          in: body
          description: Payload
          required: true
          schema:
            type: object
            properties:
              body:
                $ref: "#/definitions/Comment/properties/body"
              published:
                $ref: "#/definitions/Comment/properties/published"
              dependency_id:
                $ref: "#/definitions/Comment/properties/dependency_id"
      responses:
        "200":
          description: Successful operation
          schema:
            $ref: "#/definitions/Comment"
        "422":
          description: Invalid input
      security:
        - APIKeyHeader: []
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    name: Auth-Token
    in: header
definitions:
  Dependency:
    type: object
    required:
      - name
      - comments
    properties:
      id:
        type: integer
      name:
        type: string
        example: Rubocop
      comments:
        type: array
        items:
          $ref: "#/definitions/Comment"
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
  Comment:
    type: object
    required:
      - body
      - dependency_id
    properties:
      id:
        type: integer
      body:
        type: string
        example: Hello world !
      published:
        type: boolean
        example: true
      dependency_id:
        type: integer
      created_at:
        type: string
        format: date-time
      updated_at:
        type: string
        format: date-time
