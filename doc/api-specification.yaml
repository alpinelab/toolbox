swagger: '2.0'
info:
  description: API AlpineLab toolbox
  version: 0.1.0
  title: Toolbox
  contact:
    email: dev@alpine-lab.com
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
host: 'localhost:5000'
tags:
  - name: dependency
    description: Everything about Dependencies
  - name: comment
    description: Access to Dependencies Comments
schemes:
  - http
paths:
  '/dependencies/{dependencies_id}':
    get:
      tags:
        - dependency
      summary: Find dependency by ID
      description: Returns a single dependency
      operationId: getDependencyById
      produces:
        - application/json
      parameters:
        - name: dependencies_id
          in: path
          description: ID of dependency to return
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Dependency'
        '404':
          description: Dependency not found
  /dependencies:
    get:
      tags:
        - dependency
      summary: Find all dependencies
      description: Returns all dependencies
      operationId: getDependencies
      produces:
        - application/json
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Dependency'
    post:
      tags:
        - dependency
      summary: Add a new dependency to the toolbox
      description: ''
      operationId: addDependency
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: payload
          required: true
          schema:
            type: object
            properties:
              name:
                $ref: '#/definitions/Dependency/properties/name'
      responses:
        '201':
          description: sucessful operation
          schema:
            $ref: '#/definitions/Dependency'
        '422':
          description: Invalid input
      security:
        - APIKeyHeader: []
  '/dependencies/{dependencyId}/comments/{commentId}':
    get:
      tags:
        - comment
      summary: Find comment by ID
      description: Returns a single comment
      operationId: getCommentById
      produces:
        - application/json
      parameters:
        - name: dependencyId
          in: path
          description: ID of dependency
          required: true
          type: integer
        - name: commentId
          in: path
          description: ID of comment to return
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Comment'
        '404':
          description: Comment not found
  '/dependencies/{dependencyId}/comments':
    get:
      tags:
        - comment
      summary: Find all comments
      description: Returns all comment
      operationId: getComments
      produces:
        - application/json
      parameters:
        - name: dependencyId
          in: path
          description: ID of dependency
          required: true
          type: integer
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Comment'
        '404':
          description: Comment not found
    post:
      tags:
        - comment
      summary: create a comment
      description: ''
      operationId: addComment
      consumes:
        - appplication/json
      produces:
        - application/json
      parameters:
        - name: dependencyId
          in: path
          description: ID of dependency to create a new comment
          required: true
          type: integer
        - name: body
          in: body
          description: payload
          required: true
          schema:
            type: object
            properties:
              body:
                $ref: '#/definitions/Comment/properties/body'
              published:
                $ref: '#/definitions/Comment/properties/published'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Comment'
      security:
        - APIKeyHeader: []
securityDefinitions:
  APIKeyHeader:
    type: apiKey
    name: AuthToken
    in: header
definitions:
  Dependency:
    type: object
    required:
      - name
    properties:
      id:
        type: integer
      name:
        type: string
        example: Rubocop
      comments:
        type: array
        items:
          $ref: '#/definitions/Comment'
  Comment:
    type: object
    required:
      - body
    properties:
      id:
        type: integer
      body:
        type: string
        example: Hello world !
      published:
        type: boolean
        example: true
externalDocs:
  description: Find out more about Swagger
  url: 'http://swagger.io'
